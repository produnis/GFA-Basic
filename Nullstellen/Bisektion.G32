FullW # 1
Mode StrSpace 0 : AutoRedraw = 1 : BackColor = colBtnFace : FontName = "fixedsys"
Global Double e, h, s, x, x1, xe, xk, y, y0, y1 : Global Int32 i, n : Global a$
Dim x0(100) As Double : s = 0.01013 : e = 10 ^ -12
Print
Print "    Berechnung der Einfachnullstellen (Schnittnullstellen) von Funktionen y=f(x)"
Print "                            nach dem Bisektionsverfahren"
Print "    ****************************************************************************"
Print
Print " Wurde die zu untersuchende Funktion y=f(x) bereits in den Programmcode eingegeben?"
Input " Quittieren Sie diese Frage durch Eingabe eines 'j' für ja oder eines 'n' für nein! ", a$
Print

If a$ <> "j" And a$ <> "ja"
  Print " Beenden Sie den Programmablauf jetzt durch Schließen dieses Fensters und geben Sie"
  Print " vor einem Neustart die zu untersuchende Funktion y=f(x) in das Unterprogramm"
  Print " 'Sub FUNKTION' ein!"
  Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
EndIf

Input " Mit welchem Wert der Variablen x soll die Nullstellensuche starten? ", x
Input " Bei welchem Wert der Variablen x soll die Nullstellensuche enden  ? ", xe
Add x, 0.00013 : n = 0

Do
  FUNKTION
  Repeat : y0 = y : Add x, s             'Suche nach Vorzeichenänderung von y
    If x > xe + s : Print : Print " Ergebnis:"
      If n = 0 : Print " Keine Nullstelle gefunden!"
      Else If n = 1 : Print " Eine Nullstelle ist bei"
        Print " x = "; Round(x0(1), 8)
      Else : Print " Nullstellen sind bei"
        For i = 1 To n
          Print " x = "; Round(x0(i), 8)
        Next i
      EndIf
      Print : Print " ENDE  Durch Schließen dieses Fensters wird die Anwendung beendet!"
      Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
    EndIf
    FUNKTION
  Until Sgn(y) <> Sgn(y0)
  xk = x : x1 = x : y1 = y : Sub x, s / 2 : h = s : FUNKTION
  If Sgn(y) = Sgn(y1) And Abs(y) < Abs(y1) Or Sgn(y) = Sgn(y0) And Abs(y) < Abs(y0)
    Repeat                               'Iteration nach dem Bisektionsverfahren
      Mul h, 0.5 : x = x1 - h : FUNKTION
      If Sgn(y) <> Sgn(y0) Then x1 = x
    Until h < e
    Inc n : x0(n) = x : Add x, s
  Else : x = xk + s
  EndIf
Loop

Sub FUNKTION                             'In diese Subroutine y=f(x) eingeben!
  Rem y = x ^ 4 - 10 * x ^ 3 + 35 * x ^ 2 - 50 * x + 24
  Rem y = 1 / x - 1
  Rem y = 1 / x
  Rem y = Tan(x)
  Rem y = 2 / (x - 1) / (x - 2) / (x - 3) / (x - 4) + 6
  Rem y = 2 / (x - 1) / (x - 2) / (x - 3) / (x - 4) - 6
  Rem y = Abs(x ^ 2 * Abs(x - 1) - 1) - 1
  Rem y = 1 / (x + 1) + 1 / (x + 2) + 1 / x + 1 / (x - 1) + 1 / (x - 2) + 1 / (x - 3) + 1 / (x - 4) - 4
  Rem y = 1 + (1 - 4 * 4 * 4 / (x - 4) ^ 3) / Sqr((4 * 4 / (x - 4) ^ 2 + 1))
'##E#
  y = x ^ 3 - (x - 2) ^ 3 - 512
Return
