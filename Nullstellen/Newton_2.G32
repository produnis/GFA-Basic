FullW # 1
Mode StrSpace 0 : AutoRedraw = 1 : BackColor = colBtnFace : FontName = "fixedsys"
Global Int32 i, n, v : Global Double e, h, s, x, x1, xe, xk, y, y1, ya, yo, yu
Dim x0(100) As Double : Global a$ : s = 0.01013 : e = 10 ^ -10 : h = 10 ^ -10
Print
Print "    Berechnung der Einfachnullstellen (Schnittnullstellen) von Funktionen y=f(x)"
Print "     nach der Newtonmethode mit numerischer Bestimmung der Ableitungen ys=f'(x)"
Print "    ****************************************************************************"
Print
Print " Wurde die zu untersuchende Funktion y=f(x) bereits in den Programmcode eingegeben?"
Input " Quittieren Sie diese Frage durch Eingabe eines 'j' für ja oder eines 'n' für nein! ", a$
Print

If a$ <> "j" And a$ <> "ja"
  Print " Beenden Sie den Programmablauf jetzt durch Schließen dieses Fensters und geben Sie"
  Print " vor einem Neustart die zu untersuchende Funktion y=f(x) in das Unterprogramm"
  Print " 'Sub FUNKTION' ein!"
  Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
EndIf
Input " Mit welchem Wert von x soll die Nullstellensuche starten  ? ", x
Input " Bei welchem Wert von x soll die Nullstellensuche enden    ? ", xe
Sub x, 0.00013 : n = 0

Do
  FUNKTION
  Repeat : yu = y : Add x, s                  'Suche nach Vorzeichenänderung von y
    If x > xe + s
      Print : Print " Ergebnis:"
      If n = 0 : Print " Keine Nullstelle gefunden!"
      Else If n = 1 : Print " Eine Nullstelle ist bei"
        Print " x = "; Round(x0(1), 8)
      Else :  Print " Nullstellen sind bei"
        For i = 1 To n
          Print " x = "; Round(x0(i), 8)
        Next i
      EndIf
      Print : Print " ENDE   Durch Schließen dieses Fensters wird die Anwendung beendet!"
      Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
    EndIf
    FUNKTION
  Until Sgn(y) <> Sgn(yu)
  yo = y : xk = x : Sub x, s / 2 : FUNKTION
  If Sgn(y) = Sgn(yu) And Abs(y) < Abs(yu) Or Sgn(y) = Sgn(yo) And Abs(y) < Abs(yo)
    y = yo : x = xk
    Repeat
      x1 = x : y1 = y : Sub x, h : FUNKTION
      ya = y : x = x1 + h : FUNKTION
      Sub x, 2 * h * y1 / (y - ya) : FUNKTION         'Newton-Iteration
    Until Abs(x - x1) < e
    Inc n : x0(n) = x : Add x, s
  Else : x = xk + s
  EndIf
Loop

Sub FUNKTION                'In diese Subroutine y=f(x) eingeben!
  y = x ^ 4 - 10 * x ^ 3 + 35 * x ^ 2 - 50 * x + 24
  Rem y = 1 / x - 1
  Rem y = 2 / (x - 1) / (x - 2) / (x - 3) / (x - 4) + 6
  Rem y = 2 / (x - 1) / (x - 2) / (x - 3) / (x - 4) - 6
Return
