'##E#
FullW # 1
Mode StrSpace 0 : AutoRedraw = 1 : BackColor = colBtnFace : FontName = "fixedsys"
Global Double e, h, x, xo, xu, y, y0, y1, y2 : Global Int32 i, k, n, r, z, f$
e = 10 ^ -12 : r = 32 : Dim s(r) As Double
Print
Print "     Numerische Berechnung bestimmter Integrale von Funktionen y=f(x)"
Print "    mit der 3/8-Formel von Newton, konvergenzbeschleunigt nach Romberg"
Print "                   (Version mit Schrittweitenhalbierung)"
Print "    ******************************************************************"
Print
Print " Wurde der Integrand y=f(x) bereits in den Programmcode eingesetzt?"
Input " Tippen Sie hier bitte ein 'j' für ja oder ein 'n' für nein ein! ";f$
Print
If f$ <> "j" And f$ <> "ja"
  Print " Bitte beenden Sie den Programmablauf jetzt durch Schließen dieses Fensters"
  Print " und geben Sie vor einem Neustart die zu integrierende Funktion y=f(x)"
  Print " in das Unterprogramm 'Sub INTEGRAND' ein!"
  Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
EndIf
Input " Untere Grenze des Integrals ? ";xu
Input " Obere  Grenze des Integrals ? ";xo
Print
Print " Ergebnis:"

h = (xo - xu) / 3 : x = xu : INTEGRAND
y0 = y : Add x, h : INTEGRAND
y1 = y : Add x, h : INTEGRAND
Add y1, y : x = xo : INTEGRAND
Add y0, y
s(1) = 3 * h * (y0 + 3 * y1) / 8
For k = 2 To r
  n = 2 ^ (k - 2) : x = xu - 0.5 * h
  For i = 1 To n
    Add x, h : INTEGRAND
    Add y1, y : Add x, h : INTEGRAND
    Add y2, y : Add x, h : INTEGRAND
    Add y1, y
  Next i
  Mul h, 0.5
  s(k) = 3 * h * (y0 + 3 * y1 + 2 * y2) / 8      'Newtonformel
  z = 16
  For i = k - 1 DownTo 1
    s(i) = (s(i + 1) * z - s(i)) / (z - 1)       'Romberg-Extrapolation
    If Abs(s(i + 1) - s(i)) < e
      Print " Integralwert = "; Round(s(i), 12)
      Print
      Print " ENDE  Durch Schließen dieses Fensters beenden Sie die Anwendung!"
      Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
    Else If k = r
      Print " Es konnte keine Lösung gefunden werden! Eine Erhöhung des Wertes"
      Print " der Variablen e für die Fehlertoleranz ist eventuell zielführend."
      Print
      Print " ENDE  Durch Schließen dieses Fensters beenden Sie die Anwendung!"
      Do : Sleep : Until Me Is Nothing : CloseW # 1 : End
    EndIf
    Mul z, 4
  Next i
Next k

Sub INTEGRAND                         'In diese Subroutine y=f(x) eingeben!
  y = Exp(-x * x / 2) / Sqr(2 * PI)
  Rem y = x * Exp(x) / (x + 1) ^ 2
  Rem y = 1 / x
Return
